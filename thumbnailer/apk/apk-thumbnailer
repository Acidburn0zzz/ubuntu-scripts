#!/bin/sh
# ---------------------------------------------------
# Thumbnailer for APK archives files
# Display embedded icon and version number (option)
#
# Procedure :
#   http://bernaerts.dyndns.org/linux/76-gnome/284-gnome-shell-generate-apk-thumbnail-nautilus
# Depends on :
#   * unzip
#   * imagemagick (for convert)
#   * aapt
#   * gvfs
# Parameters :
#   $1 - URI of APK archive
#   $2 - full path of generated thumbnail
#   $3 - height of thumbnail in pixels
# Revision history :
#   04/08/2013, V1.0 - Creation by N. Bernaerts
#   11/08/2013, V1.1 - Use aapt to get icon file
#   05/11/2014, V2.0 - Add version display
#   06/11/2014, V2.1 - Don't use renamed aapt anymore
#   15/11/2014, V3.0 - Use URI to handle network shares
# ---------------------------------------------------

# select to display version on the icon
# set to yes to display version number on the icon
DISPLAY_VERSION="no"

# get parameters
FILE_URI=$1
FILE_THUMB=$2
HEIGHT=$3

# get filename extension
FILE_EXT=$(echo "$FILE_URI" | sed 's/^.*\.\(.*\)/\1/')

# generate temporary local filename
TMP_FILE=$(mktemp -t XXXXXXXX.${FILE_EXT})

# copy input file to temporary local file
gvfs-copy "${FILE_URI}" "${TMP_FILE}"

# get application icon
ICON=$(aapt d badging "${TMP_FILE}" | grep "application-icon" | sed 's/^.*icon-\(.*\):.\(.*\).$/\2/' | tail -1)

# if icon exists, extract icon & generate thumbnail 
if [ "$ICON" != "" ] ;
then 
  # if needed, add version display options
  if [ "$DISPLAY_VERSION" = "yes" ] ;
  then
    # get version
    VERSION=$(aapt d badging "${TMP_FILE}" | grep versionName | sed 's/^.*versionName=.\(.*\)..*$/\1/')

    # calculate optimum font size
    FONT_SIZE=`echo $HEIGHT / 5 | bc`

    # generate icon including version number
    unzip -p "${TMP_FILE}" "${ICON}" | convert -resize x${HEIGHT} - -pointsize $FONT_SIZE -fill black -gravity south -undercolor white -annotate 0 " $VERSION " "${FILE_THUMB}"

  # else, generate plain icon without version number
  else
    unzip -p "${TMP_FILE}" "${ICON}" | convert -resize x${HEIGHT} - "${FILE_THUMB}"
  fi
fi

# remove temporary local file
rm ${TMP_FILE}
