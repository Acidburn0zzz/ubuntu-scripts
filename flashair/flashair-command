#!/bin/bash
# ---------------------------------------------------
# Tool to synchronise Toshiba Flashair SD Card
# It synchronise either :
#   - directory content
#   - media files
#
# Revision history :
#   30/03/2017, V1.0 - Creation by N. Bernaerts
# ---------------------------------------------------

# set configuration file
FLASHAIR_CONF="/etc/flashair.conf"

# empty arrays
ARR_ITEM=()
ARR_DOWNLOAD=()
ARR_DIRECTORY=()

# if no argument, display help
if [ $# -eq 0 ] 
then
  echo "Tool to synchronise Toshiba Flashair SD Card content"
  echo "Only usable if laptop is connected to a Toshiba FlashAir wifi network"
  echo "Parameters are :"
  echo "  <item1> <item2> ...     File/directory to update with flashair content"
fi

# loop to retrieve arguments
while test $# -gt 0
do
  case "$1" in
    *) ARR_ITEM=("${ARR_ITEM[@]}" "$1"); shift; ;;
   esac
done

# check tools
command -v wget >/dev/null 2>&1 || { echo "Please install wget"; exit 1; }
command -v composite >/dev/null 2>&1 || { echo "Please install composite [imagemagick package]"; exit 1; }
command -v convert >/dev/null 2>&1 || { echo "Please install convert [imagemagick package]"; exit 1; }
command -v inotifywait >/dev/null 2>&1 || { echo "Please install inotifywait [inotify-tools package]"; exit 1; }

# check configuration file
[ ! -f ${FLASHAIR_CONF} ] && { echo "Configuration file ${FLASHAIR_CONF} is missing"; exit 1; }

# Thumbnailing function
#  $1 - input thumbnail
#  $2 - target thumbnail
#  $3 - file size
#  $4 - state (available or download)
function create_thumbnail {
	TMP_INPUT=$(mktemp --tmpdir icon-XXXXXXXXX.png)
	TMP_BULLET=$(mktemp --tmpdir bullet-XXXXXXXXX.png)

	# generate icon with 192 pixel width
	convert -resize 192x "$1" "${TMP_INPUT}"

	# get file size and state
	FILE_SIZE=$(numfmt --to=iec $3)
	FILE_STATE=$4

	# generate bullet
	convert -fill white -pointsize 28 -draw 'text 50,34 "'${FILE_SIZE}'"' "/usr/share/icons/flashair-${FILE_STATE}.png" "${TMP_BULLET}"

	# create thumbnail with bullet
	composite -gravity SouthEast "${TMP_BULLET}" "${TMP_INPUT}" "$2"

	# remove temporary file
	rm -f "${TMP_INPUT}" "${TMP_BULLET}"
}

# get flashair mount directory
FLASHAIR_ROOT=$(grep "^flashair-mount=" "${FLASHAIR_CONF}" | cut -d'=' -f2-)

# create temporary files
TMP_LIST=$(mktemp --tmpdir list-XXXXXXXXX.txt)
TMP_FILE=$(mktemp --tmpdir file-XXXXXXXXX.jpg)
TMP_THUMB=$(mktemp --tmpdir thumb-XXXXXXXXX.jpg)

# loop to analyse items
for ITEM in "${ARR_ITEM[@]}"
do
	# if item is a directory
	if [ -d "${ITEM}" ]
	then
		# add it to directories array
		ARR_DIRECTORY=("${ARR_DIRECTORY[@]}" "${ITEM}")

	# if item is a file
	elif [ -f "${ITEM}" ]
	then
		# path of item on flashair card
		CARD_ITEM_PATH=$(echo "${ITEM}" | sed "s|^${FLASHAIR_ROOT}||")

		# get item father directory content on flashair card
		CARD_ITEM_FATHER=$(dirname "${CARD_ITEM_PATH}")
		wget --quiet -O - "http://flashair/command.cgi?op=100&DIR=${CARD_ITEM_FATHER}" | tail -n +2 > "${TMP_LIST}"

		# get filename
		ITEM_NAME=$(basename "${ITEM}")

		# get file size on flashair card
		CARD_ITEM_SIZE=$(grep ",${ITEM_NAME}," "${TMP_LIST}" | cut -d',' -f3)

		# get local file size
		ITEM_SIZE=$(stat -c %s "${ITEM}")

		# if size differs, add file to the download array
		if [ "${CARD_ITEM_SIZE}" != "${ITEM_SIZE}" ]
		then
			# create thumbnail with download pending bullet
			create_thumbnail "${ITEM}" "${ITEM}" "${CARD_ITEM_SIZE}" "download"

			# add file to download array
			ARR_DOWNLOAD=("${ARR_DOWNLOAD[@]}" "${ITEM}")
		fi
	fi
done

# loop thru directories to update them
for ITEM in "${ARR_DIRECTORY[@]}"
do
	# path of item on flashair card
	CARD_ITEM_PATH=$(echo "${ITEM}" | sed "s|^${FLASHAIR_ROOT}||")

	# retrieve directory content from flashair card
	wget --quiet -O - "http://flashair/command.cgi?op=100&DIR=${CARD_ITEM_PATH}" | tail -n +2 > "${TMP_LIST}"

	# loop thru directory content
	while read LINE;
	do
		# read current subitem data
		CARD_SUBITEM_NAME=$(echo "${LINE}" | cut -d',' -f2)
		CARD_SUBITEM_SIZE=$(echo "${LINE}" | cut -d',' -f3)
		CARD_SUBITEM_TYPE=$(echo "${LINE}" | cut -d',' -f4)

		# generate local subitem path
		SUBITEM="${ITEM}/${CARD_SUBITEM_NAME}"

		# if current subitem is a file
		if [ ${CARD_SUBITEM_TYPE} -ge 32 ]
		then
			# if file does not exist locally, get thumbnail
			if [ ! -f "${SUBITEM}" ]
			then
				# set default generic thumbnail
				cp "/usr/share/icons/flashair-generic.jpg" "${TMP_FILE}"

				# if file is a JPEG image, download embedded thumbnail
				IS_JPEG=$(echo "${CARD_SUBITEM_NAME}" | grep -i ".jpg$")
				[ "${IS_JPEG}" != "" ] && wget --quiet -O "${TMP_FILE}" "http://flashair/thumbnail.cgi?${CARD_ITEM_PATH}/${CARD_SUBITEM_NAME}"

				# create thumbnail with bullet and file size
				create_thumbnail "${TMP_FILE}" "${TMP_THUMB}" "${CARD_SUBITEM_SIZE}" "available"

				# write thumbnail in local path (as rwxrwxrwx)
				mv "${TMP_THUMB}" "${SUBITEM}"
				chmod 666 "${SUBITEM}"
			fi

		# else, if current item is a directory 
		elif [ ${CARD_SUBITEM_TYPE} -ge 16 ]
		then
			# if local directory does not exist
			if [ ! -d "${SUBITEM}" ]
			then
				# create local subdirectory (as rwxrwxrwx)
				mkdir --parent "${SUBITEM}"
				chmod 777 "${SUBITEM}"
			fi
		fi
	done < "${TMP_LIST}"
done

# loop thru files to download them
for ITEM in "${ARR_DOWNLOAD[@]}"
do
	# path of item on flashair card
	CARD_ITEM_PATH=$(echo "${ITEM}" | sed "s|^${FLASHAIR_ROOT}||")

	# download file and set rw.rw.rw. rights
	wget --quiet -O "${ITEM}" "http://flashair/${CARD_ITEM_PATH}"
	chmod 666 "${ITEM}"
done

# remove temporary files
rm -f "${TMP_LIST}" "${TMP_FILE}" "${TMP_THUMB}"
